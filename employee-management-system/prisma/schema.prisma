// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id            String       @id @default(uuid())
  name          String
  dateOfBirth   DateTime
  gender        Gender
  contactNumber Int
  email         String
  departmentId  String
  department    Department   @relation(fields: [departmentId], references: [id])
  attendance    Attendance[]
  leave         Leave[]
  training      Training[] 
  refreshToken RefreshToken[]
}

model Department {
  id             String     @id @default(uuid())
  departmentName String
  location       String
  employee       Employee[]
  project        Project[]
}

model Attendance {
  id           String   @id @default(uuid())
  employeeId   String
  date         DateTime
  checkInTime  DateTime 
  checkOutTime DateTime 
  employee     Employee @relation(fields: [employeeId], references: [id])
}

model RefreshToken {
  id    String   @id @default(uuid())
  token String
  employeeId String    
  employee   Employee   @relation(fields: [employeeId], references: [id], onDelete: Cascade)
  expiresAt DateTime
}

model Leave {
  leaveId    String   @id @default(uuid())
  employeeId String
  leaveType  String
  status     String
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Project {
  id           String     @id @default(uuid())
  projectName  String
  departmentId String
  status       String
  department   Department @relation(fields: [departmentId], references: [id])
}

model Training {
  id         String   @id @default(uuid())
  employeeId String
  status     String
  employee   Employee[]
}

enum Gender {
  Male
  Female
}