// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String      @id @default(uuid())
  name          String
  email         String      @unique
  password      String      @unique
  profilePicURL String
  post          Post[]
  likes         Likes[]
  comments      Comments[]
  follower      Followers[]
  
messagesSent  Message[]   @relation("SentMessages") 
  messagesReceived Message[] @relation("ReceivedMessages") 
  
}

model Post {
  id       String     @id @default(uuid())
  userId   String
  caption  String
  user     User       @relation(fields: [userId], references: [id])
  likes    Likes[]
  comments Comments[]
}

model Likes {
  id     String @id @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
}

model Comments {
  id     String @id @default(uuid())
  postId String
  userId String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
}

model Followers {
  id         String @id @default(uuid())
  followerId String
  followedId String
  user       User[]
}

model Message {
  id         String @id @default(uuid())
  senderId   String
  receiverId String
  sender     User    @relation("SentMessages", fields: [senderId], references: [id])  
  receiver   User    @relation("ReceivedMessages", fields: [receiverId], references: [id]) 

  
}
